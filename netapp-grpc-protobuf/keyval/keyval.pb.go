// Code generated by protoc-gen-go. DO NOT EDIT.
// source: keyval.proto

package keyval

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoadReq struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadReq) Reset()         { *m = LoadReq{} }
func (m *LoadReq) String() string { return proto.CompactTextString(m) }
func (*LoadReq) ProtoMessage()    {}
func (*LoadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_caa6560b9df90f76, []int{0}
}

func (m *LoadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadReq.Unmarshal(m, b)
}
func (m *LoadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadReq.Marshal(b, m, deterministic)
}
func (m *LoadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadReq.Merge(m, src)
}
func (m *LoadReq) XXX_Size() int {
	return xxx_messageInfo_LoadReq.Size(m)
}
func (m *LoadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoadReq proto.InternalMessageInfo

func (m *LoadReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type LoadRsp struct {
	Val                  int32    `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	Exists               bool     `protobuf:"varint,2,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadRsp) Reset()         { *m = LoadRsp{} }
func (m *LoadRsp) String() string { return proto.CompactTextString(m) }
func (*LoadRsp) ProtoMessage()    {}
func (*LoadRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_caa6560b9df90f76, []int{1}
}

func (m *LoadRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadRsp.Unmarshal(m, b)
}
func (m *LoadRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadRsp.Marshal(b, m, deterministic)
}
func (m *LoadRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadRsp.Merge(m, src)
}
func (m *LoadRsp) XXX_Size() int {
	return xxx_messageInfo_LoadRsp.Size(m)
}
func (m *LoadRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadRsp.DiscardUnknown(m)
}

var xxx_messageInfo_LoadRsp proto.InternalMessageInfo

func (m *LoadRsp) GetVal() int32 {
	if m != nil {
		return m.Val
	}
	return 0
}

func (m *LoadRsp) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type StoreReq struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val                  int32    `protobuf:"varint,2,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreReq) Reset()         { *m = StoreReq{} }
func (m *StoreReq) String() string { return proto.CompactTextString(m) }
func (*StoreReq) ProtoMessage()    {}
func (*StoreReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_caa6560b9df90f76, []int{2}
}

func (m *StoreReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreReq.Unmarshal(m, b)
}
func (m *StoreReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreReq.Marshal(b, m, deterministic)
}
func (m *StoreReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreReq.Merge(m, src)
}
func (m *StoreReq) XXX_Size() int {
	return xxx_messageInfo_StoreReq.Size(m)
}
func (m *StoreReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreReq.DiscardUnknown(m)
}

var xxx_messageInfo_StoreReq proto.InternalMessageInfo

func (m *StoreReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StoreReq) GetVal() int32 {
	if m != nil {
		return m.Val
	}
	return 0
}

type StoreRsp struct {
	Added                bool     `protobuf:"varint,1,opt,name=added,proto3" json:"added,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreRsp) Reset()         { *m = StoreRsp{} }
func (m *StoreRsp) String() string { return proto.CompactTextString(m) }
func (*StoreRsp) ProtoMessage()    {}
func (*StoreRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_caa6560b9df90f76, []int{3}
}

func (m *StoreRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreRsp.Unmarshal(m, b)
}
func (m *StoreRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreRsp.Marshal(b, m, deterministic)
}
func (m *StoreRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreRsp.Merge(m, src)
}
func (m *StoreRsp) XXX_Size() int {
	return xxx_messageInfo_StoreRsp.Size(m)
}
func (m *StoreRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreRsp.DiscardUnknown(m)
}

var xxx_messageInfo_StoreRsp proto.InternalMessageInfo

func (m *StoreRsp) GetAdded() bool {
	if m != nil {
		return m.Added
	}
	return false
}

type KeysReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeysReq) Reset()         { *m = KeysReq{} }
func (m *KeysReq) String() string { return proto.CompactTextString(m) }
func (*KeysReq) ProtoMessage()    {}
func (*KeysReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_caa6560b9df90f76, []int{4}
}

func (m *KeysReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeysReq.Unmarshal(m, b)
}
func (m *KeysReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeysReq.Marshal(b, m, deterministic)
}
func (m *KeysReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeysReq.Merge(m, src)
}
func (m *KeysReq) XXX_Size() int {
	return xxx_messageInfo_KeysReq.Size(m)
}
func (m *KeysReq) XXX_DiscardUnknown() {
	xxx_messageInfo_KeysReq.DiscardUnknown(m)
}

var xxx_messageInfo_KeysReq proto.InternalMessageInfo

type KeysRsp struct {
	Keys                 []string `protobuf:"bytes,1,rep,name=Keys,proto3" json:"Keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeysRsp) Reset()         { *m = KeysRsp{} }
func (m *KeysRsp) String() string { return proto.CompactTextString(m) }
func (*KeysRsp) ProtoMessage()    {}
func (*KeysRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_caa6560b9df90f76, []int{5}
}

func (m *KeysRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeysRsp.Unmarshal(m, b)
}
func (m *KeysRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeysRsp.Marshal(b, m, deterministic)
}
func (m *KeysRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeysRsp.Merge(m, src)
}
func (m *KeysRsp) XXX_Size() int {
	return xxx_messageInfo_KeysRsp.Size(m)
}
func (m *KeysRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_KeysRsp.DiscardUnknown(m)
}

var xxx_messageInfo_KeysRsp proto.InternalMessageInfo

func (m *KeysRsp) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func init() {
	proto.RegisterType((*LoadReq)(nil), "keyval.LoadReq")
	proto.RegisterType((*LoadRsp)(nil), "keyval.LoadRsp")
	proto.RegisterType((*StoreReq)(nil), "keyval.StoreReq")
	proto.RegisterType((*StoreRsp)(nil), "keyval.StoreRsp")
	proto.RegisterType((*KeysReq)(nil), "keyval.KeysReq")
	proto.RegisterType((*KeysRsp)(nil), "keyval.KeysRsp")
}

func init() { proto.RegisterFile("keyval.proto", fileDescriptor_caa6560b9df90f76) }

var fileDescriptor_caa6560b9df90f76 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x50, 0x5d, 0x4b, 0xc3, 0x30,
	0x14, 0x25, 0xdb, 0xda, 0xb5, 0x17, 0xc1, 0x71, 0x11, 0x29, 0x15, 0xa1, 0xe4, 0xa9, 0x20, 0xf4,
	0xc1, 0xfd, 0x8c, 0xf9, 0x94, 0x81, 0xef, 0xd1, 0xdc, 0x07, 0x59, 0x21, 0xd9, 0x6e, 0x29, 0xe6,
	0x3f, 0xf8, 0xa3, 0x25, 0x59, 0xa2, 0x54, 0x7c, 0x3b, 0x1f, 0xc9, 0xc9, 0x39, 0x81, 0x9b, 0x13,
	0xf9, 0x59, 0x8f, 0x83, 0xbb, 0xd8, 0xc9, 0x62, 0x79, 0x65, 0xf2, 0x01, 0xb6, 0x2f, 0x56, 0x1b,
	0x45, 0x67, 0xdc, 0xc1, 0xfa, 0x44, 0xbe, 0x11, 0x9d, 0xe8, 0x6b, 0x15, 0xa0, 0xdc, 0x27, 0x93,
	0x5d, 0x30, 0x67, 0x3d, 0x46, 0xb3, 0x50, 0x01, 0xe2, 0x3d, 0x94, 0xf4, 0xf9, 0xc1, 0x13, 0x37,
	0xab, 0x4e, 0xf4, 0x95, 0x4a, 0x4c, 0x0e, 0x50, 0x1d, 0x27, 0x7b, 0xa1, 0x7f, 0x23, 0x73, 0xce,
	0xea, 0x27, 0x47, 0x76, 0xf9, 0x3c, 0x3b, 0xbc, 0x83, 0x42, 0x1b, 0x43, 0x26, 0xde, 0xa8, 0xd4,
	0x95, 0xc8, 0x1a, 0xb6, 0x07, 0xf2, 0xac, 0xe8, 0x2c, 0x1f, 0x13, 0x64, 0x87, 0x08, 0x9b, 0x00,
	0x1b, 0xd1, 0xad, 0xfb, 0x5a, 0x45, 0xfc, 0xfc, 0x25, 0xa0, 0x3e, 0x90, 0x7f, 0xd5, 0xe3, 0x71,
	0x7e, 0xc7, 0x1e, 0x36, 0xa1, 0x3e, 0xde, 0x0e, 0x69, 0x7a, 0x5a, 0xda, 0x2e, 0x05, 0x76, 0xf8,
	0x04, 0x45, 0xec, 0x80, 0xbb, 0xec, 0xe4, 0x09, 0xed, 0x1f, 0x85, 0x5d, 0x88, 0x0d, 0x8f, 0xfd,
	0xc6, 0xa6, 0x72, 0xed, 0x52, 0x60, 0xf7, 0x56, 0xc6, 0xbf, 0xde, 0x7f, 0x07, 0x00, 0x00, 0xff,
	0xff, 0x95, 0x57, 0x9d, 0x39, 0x7b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KeyValSvcClient is the client API for KeyValSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KeyValSvcClient interface {
	Load(ctx context.Context, in *LoadReq, opts ...grpc.CallOption) (*LoadRsp, error)
	Store(ctx context.Context, in *StoreReq, opts ...grpc.CallOption) (*StoreRsp, error)
	Keys(ctx context.Context, in *KeysReq, opts ...grpc.CallOption) (*KeysRsp, error)
}

type keyValSvcClient struct {
	cc *grpc.ClientConn
}

func NewKeyValSvcClient(cc *grpc.ClientConn) KeyValSvcClient {
	return &keyValSvcClient{cc}
}

func (c *keyValSvcClient) Load(ctx context.Context, in *LoadReq, opts ...grpc.CallOption) (*LoadRsp, error) {
	out := new(LoadRsp)
	err := c.cc.Invoke(ctx, "/keyval.KeyValSvc/Load", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyValSvcClient) Store(ctx context.Context, in *StoreReq, opts ...grpc.CallOption) (*StoreRsp, error) {
	out := new(StoreRsp)
	err := c.cc.Invoke(ctx, "/keyval.KeyValSvc/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyValSvcClient) Keys(ctx context.Context, in *KeysReq, opts ...grpc.CallOption) (*KeysRsp, error) {
	out := new(KeysRsp)
	err := c.cc.Invoke(ctx, "/keyval.KeyValSvc/Keys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KeyValSvcServer is the server API for KeyValSvc service.
type KeyValSvcServer interface {
	Load(context.Context, *LoadReq) (*LoadRsp, error)
	Store(context.Context, *StoreReq) (*StoreRsp, error)
	Keys(context.Context, *KeysReq) (*KeysRsp, error)
}

func RegisterKeyValSvcServer(s *grpc.Server, srv KeyValSvcServer) {
	s.RegisterService(&_KeyValSvc_serviceDesc, srv)
}

func _KeyValSvc_Load_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyValSvcServer).Load(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/keyval.KeyValSvc/Load",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyValSvcServer).Load(ctx, req.(*LoadReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyValSvc_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyValSvcServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/keyval.KeyValSvc/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyValSvcServer).Store(ctx, req.(*StoreReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyValSvc_Keys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeysReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyValSvcServer).Keys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/keyval.KeyValSvc/Keys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyValSvcServer).Keys(ctx, req.(*KeysReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _KeyValSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "keyval.KeyValSvc",
	HandlerType: (*KeyValSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Load",
			Handler:    _KeyValSvc_Load_Handler,
		},
		{
			MethodName: "Store",
			Handler:    _KeyValSvc_Store_Handler,
		},
		{
			MethodName: "Keys",
			Handler:    _KeyValSvc_Keys_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "keyval.proto",
}
